<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget parent="main_window" name="Main Window">
  <Tab tab_name="Alt" containers="1">
   <Container>
    <DockSplitter sizes="0.500269;0.499731" count="2" orientation="-">
     <DockArea name="...">
      <plot flip_y="false" style="Lines" flip_x="false" mode="TimeSeries">
       <range bottom="-0.036328" top="1.489453" left="364.965039" right="372.433138"/>
       <limitY/>
       <curve color="#d62728" name="distance_sensor/current_distance"/>
      </plot>
     </DockArea>
     <DockArea name="...">
      <plot flip_y="false" style="Lines" flip_x="false" mode="TimeSeries">
       <range bottom="20.226826" top="25.623741" left="364.965039" right="372.433138"/>
       <limitY/>
       <curve color="#17becf" name="vehicle_global_position/alt"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="motors" containers="1">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockSplitter sizes="0.500269;0.499731" count="2" orientation="-">
      <DockSplitter sizes="0.5;0.5" count="2" orientation="|">
       <DockArea name="...">
        <plot flip_y="false" style="Lines" flip_x="false" mode="TimeSeries">
         <range bottom="-0.025000" top="1.025000" left="364.965039" right="372.433138"/>
         <limitY/>
         <curve color="#f14cc1" name="actuator_motors/control.02"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_y="false" style="Lines" flip_x="false" mode="TimeSeries">
         <range bottom="0.144650" top="1.020862" left="364.965039" right="372.433138"/>
         <limitY/>
         <curve color="#1ac938" name="actuator_motors/control.00"/>
        </plot>
       </DockArea>
      </DockSplitter>
      <DockSplitter sizes="0.5;0.5" count="2" orientation="|">
       <DockArea name="...">
        <plot flip_y="false" style="Lines" flip_x="false" mode="TimeSeries">
         <range bottom="-0.025000" top="1.025000" left="364.965039" right="372.433138"/>
         <limitY/>
         <curve color="#ff7f0e" name="actuator_motors/control.01"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_y="false" style="Lines" flip_x="false" mode="TimeSeries">
         <range bottom="-0.025000" top="1.025000" left="364.965039" right="372.433138"/>
         <limitY/>
         <curve color="#9467bd" name="actuator_motors/control.03"/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab tab_name="acc" containers="1">
   <Container>
    <DockSplitter sizes="1" count="1" orientation="-">
     <DockArea name="...">
      <plot flip_y="false" style="Lines" flip_x="false" mode="TimeSeries">
       <range bottom="-171.350938" top="74.538523" left="364.965039" right="372.433138"/>
       <limitY/>
       <curve color="#bcbd22" name="vehicle_acceleration/xyz.02"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="2"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <parameters time_axis="" delimiter="0"/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/dynamo_db/actu_sys/actuation_allocator/allocation_cmds;/dynamo_db/actu_sys/arm_commander/io_cmds_to_px4;/dynamo_db/angle_err;/dynamo_db/ctrl_sys/ah_des;/dynamo_db/ctrl_sys/ai_yaw_corrected;/dynamo_db/ctrl_sys/ori_ctrl_sw_ori;/dynamo_db/ctrl_sys/ori_ctrl_sw_ori_rate;/dynamo_db/ctrl_sys/ori/angle_u;/dynamo_db/ctrl_sys/ori/yaw/yaw_rate_setpoint;/dynamo_db/ctrl_sys/pitch_sp;/dynamo_db/ctrl_sys/pos_err_h;/dynamo_db/ctrl_sys/roll_sp;/dynamo_db/ctrl_sys/throttle_cmd;/dynamo_db/ctrl_sys/throttle_ctrl_sw_ori;/dynamo_db/ctrl_sys/vel_err_h;/dynamo_db/ctrl_sys/yaw_discrete;/dynamo_db/ctrl_sys/yaw_rate_sp;/dynamo_db/ctrl_sys/z/kd_val;/dynamo_db/ctrl_sys/z/kp_val;/dynamo_db/estimator/abs_pressure;/dynamo_db/estimator/acc;/dynamo_db/estimator/air_speed;/dynamo_db/estimator/bat_current_A;/dynamo_db/estimator/bat_remaining_percent;/dynamo_db/estimator/bat_voltage_V;/dynamo_db/estimator/consumed_current_Ah;/dynamo_db/estimator/diff_pressure;/dynamo_db/estimator/gps/alt_msl;/dynamo_db/estimator/gps/vel_down;/dynamo_db/estimator/gps/vel_east;/dynamo_db/estimator/gps/vel_north;/dynamo_db/estimator/ground_speed;/dynamo_db/estimator/heading;/dynamo_db/estimator/ori;/dynamo_db/estimator/ori_rate;/dynamo_db/estimator/pos;/dynamo_db/estimator/vel;/dynamo_db/mrft_initiation_commander/switch_mrft_pitch;/dynamo_db/mrft_initiation_commander/switch_mrft_roll;/dynamo_db/mrft_initiation_commander/switch_mrft_x;/dynamo_db/mrft_initiation_commander/switch_mrft_y;/dynamo_db/mrft_initiation_commander/switch_mrft_z;/dynamo_db/mrft/inner;/dynamo_db/mrft/outer;/dynamo_db/px4_rc_to_ori_thrust/fwd_cmd;/dynamo_db/px4_rc_to_ori_thrust/ori_des;/dynamo_db/px4_rc_to_ori_thrust/ori_rate_des;/dynamo_db/px4_rc_to_ori_thrust/rc_raw;/dynamo_db/px4_rc_to_ori_thrust/thrust;/dynamo_db/px4_rc_to_ori_thrust/vtol_mode_des;/dynamo_db/qgc_rc_to_ori_thrust/pitch_des;/dynamo_db/qgc_rc_to_ori_thrust/roll_des;/dynamo_db/qgc_rc_to_ori_thrust/throttle_des;/dynamo_db/qgc_rc_to_ori_thrust/yaw_des;/dynamo_db/qgc_rc_to_ori_thrust/yaw_rate_des;/dynamo_db/rc_to_pos_vel_yaw_set_points/waypoint_ref_pos;/dynamo_db/rc_to_pos_vel_yaw_set_points/waypoint_ref_vel;/dynamo_db/rc_to_pos_vel_yaw_set_points/waypoint_ref_yaw;/dynamo_db/rc_to_pos_vel_yaw_set_points/waypoint_ref_yaw_rate;/dynamo_db/rot_des;/dynamo_db/switch_rc_ref_setpoint_pos;/dynamo_db/switch_rc_ref_setpoint_vel;/dynamo_db/switch_rc_ref_setpoint_yaw;/dynamo_db/switch_rc_source_px4_qgc_pitch;/dynamo_db/switch_rc_source_px4_qgc_roll;/dynamo_db/switch_rc_source_px4_qgc_thr;/dynamo_db/switch_rc_source_px4_qgc_yaw;/dynamo_db/thrust_cmd;/dynamo_db/TrajectorySystem/acc;/dynamo_db/TrajectorySystem/crackle;/dynamo_db/TrajectorySystem/jerk;/dynamo_db/TrajectorySystem/ori;/dynamo_db/TrajectorySystem/pos;/dynamo_db/TrajectorySystem/snap;/dynamo_db/TrajectorySystem/vel;/rosout;/rosout_agg"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS Topic Subscriber">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/dynamo_db/actu_sys/motor_cmds;/dynamo_db/actuation_cmd;/dynamo_db/angle_err;/dynamo_db/ctrl_sys/ori/angle_u;/dynamo_db/ctrl_sys/ori/yaw/yaw_rate_setpoint;/dynamo_db/ctrl_sys/z/kd_val;/dynamo_db/ctrl_sys/z/kp_val;/dynamo_db/estimator/abs_pressure;/dynamo_db/estimator/acc;/dynamo_db/estimator/air_speed;/dynamo_db/estimator/bat_current_A;/dynamo_db/estimator/bat_remaining_percent;/dynamo_db/estimator/bat_voltage_V;/dynamo_db/estimator/consumed_current_Ah;/dynamo_db/estimator/diff_pressure;/dynamo_db/estimator/gps/alt_msl;/dynamo_db/estimator/gps/vel_down;/dynamo_db/estimator/gps/vel_east;/dynamo_db/estimator/gps/vel_north;/dynamo_db/estimator/ground_speed;/dynamo_db/estimator/heading;/dynamo_db/estimator/ori;/dynamo_db/estimator/ori_rate;/dynamo_db/estimator/pos;/dynamo_db/estimator/vel;/dynamo_db/mrft/inner;/dynamo_db/mrft/outer;/dynamo_db/px4_rc_to_ori_thrust/fwd_cmd;/dynamo_db/px4_rc_to_ori_thrust/ori_des;/dynamo_db/px4_rc_to_ori_thrust/ori_rate_des;/dynamo_db/px4_rc_to_ori_thrust/rc_raw;/dynamo_db/px4_rc_to_ori_thrust/thrust;/dynamo_db/px4_rc_to_ori_thrust/vtol_mode_des;/dynamo_db/qgc_rc_to_ori_thrust/pitch_des;/dynamo_db/qgc_rc_to_ori_thrust/roll_des;/dynamo_db/qgc_rc_to_ori_thrust/throttle_des;/dynamo_db/qgc_rc_to_ori_thrust/yaw_des;/dynamo_db/rc_to_pos_vel_yaw_set_points/waypoint_ref_pos;/dynamo_db/rc_to_pos_vel_yaw_set_points/waypoint_ref_vel;/dynamo_db/rc_to_pos_vel_yaw_set_points/waypoint_ref_yaw;/dynamo_db/rc_to_pos_vel_yaw_set_points/waypoint_ref_yaw_rate;/dynamo_db/rot_des;/dynamo_db/thrust_cmd;/dynamo_db/TrajectorySystem/acc;/dynamo_db/TrajectorySystem/crackle;/dynamo_db/TrajectorySystem/jerk;/dynamo_db/TrajectorySystem/ori;/dynamo_db/TrajectorySystem/pos;/dynamo_db/TrajectorySystem/snap;/dynamo_db/TrajectorySystem/vel;/rosout;/rosout_agg"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS /rosout Visualization"/>
  <plugin ID="ROS Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

